version: "3.9"

services:
  db:
    image: postgres
    volumes:
      - djangoUnicorn_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME:-djangoUnicorn}
      - POSTGRES_USER=${DB_USER:-djangoUnicorn}
      - POSTGRES_PASSWORD=${DB_PASS:-djangoUnicorn}
      - POSTGRES_PORT=${DB_PORT:-5432}
      - POSTGRES_HOST=${DB_HOST:-db}

    ports:
      - ${DB_PORT:-5432}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER:-djangoUnicorn}" ]
      interval: 2s
      timeout: 5s
      retries: 5
    command: [ "postgres", "-c", "log_statement=${POSTGRES_LOG_LEVEL:-all}" ]  # override entrypoint command with log_statement argument
    networks:
      - djangoUnicorn
    restart: unless-stopped

  cache:
    image: redis:6.2-alpine
    restart: always
    networks:
      - djangoUnicorn
    ports:
      - '${REDIS_PORT:-6379}:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass  ${REDIS_PASSWORD:-morgancode}
    volumes:
      - cache:/data

  celery:
    build: .
    command: celery -A djangoUnicorn worker -l info
    volumes:
      - .:/code
    depends_on:
      - db
      - cache
      - web
    env_file:
      - .env
    networks:
      - djangoUnicorn
    restart: unless-stopped

  celery_beat:
    build: .
    command: celery -A djangoUnicorn beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    depends_on:
      - db
      - cache
      - web
    env_file:
      - .env
    networks:
      - djangoUnicorn

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - djangoUnicorn
    restart: unless-stopped
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - ${MAIL_PORT:-1025}:1025
      - ${MAIL_PORT_SMTP:-8025}:8025
    networks:
      - djangoUnicorn
networks:
  djangoUnicorn:
volumes:
  djangoUnicorn_db:
  cache: